<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jee="http://www.springframework.org/schema/jee"  
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.0.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
	http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-2.5.xsd">
	<description>
		Spring Configuration of CuteFramework Based Application.
	</description>
	<import resource="classpath:frameworkContext.xml" />
	<import resource="classpath:extendContext.xml" /> 
	<!-- Dictionary Component Config-->
		<import resource="classpath:dictContext.xml"/>
	
	<!-- Persistent Session Config323
		<import resource="classpath:sessionContext.xml"/>
	-->
	<!-- Security Component Config -->
	<import resource="classpath:resourceContext.xml" /> 
	<!---->
	<import resource="classpath:securityContext.xml" />
	<import resource="classpath:appmgrContext.xml" />
	<import resource="classpath:organContext.xml" />
	
	<!-- Workflow Component Config
		<import resource="classpath:bpmsContext.xml" />
	-->
   <!--
    <import resource="classpath:taglibContext.xml" />
	-->
	<!-- =================================================================== -->
	<!-- Context Define                                                      -->
	<!-- =================================================================== -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:database.properties</value>
			</list>
		</property>
	</bean>
		
	<context:component-scan base-package="com.wonders" />
	
	<!-- =================================================================== -->
	<!-- Data Source Define (jdbc & jndi)                                    -->
	<!-- =================================================================== -->
	<!-- JDBC Configuration 
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName"
			value="${hibernate.connection.driver_class}" />
		<property name="url" value="${hibernate.connection.url}" />
		<property name="username"
			value="${hibernate.connection.username}" />
		<property name="password"
			value="${hibernate.connection.password}" />
	</bean>
-->
	<!-- JNDI Configuration 
	
		<bean id="dataSource2" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName" value="jdbc/stptinc"/>
		</bean>
		
		<bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName" value="jdbc/stptdemo"/>
		</bean>
	
		<bean id="dataSource3" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName" value="jdbc/stfb"/>
		</bean>
	-->	
	<!-- JNDI Configuration tomcat-->
	
		<!-- <jee:jndi-lookup id="dataSource" jndi-name="jdbc/stptdemo" />  -->
		<jee:jndi-lookup id="dataSource" jndi-name="java:comp/env/jdbc/stptdemo" /> 
		<jee:jndi-lookup id="dataSource2" jndi-name="java:comp/env/jdbc/stptinc" /> 
		<jee:jndi-lookup id="dataSource3" jndi-name="java:comp/env/jdbc/stfb" /> 
	
	<!--
		<bean id="dataSource2" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName" value="jdbc/stptinc"/>
		</bean>
		
		<bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName" value="jdbc/stptdemo"/>
		</bean>
	
		<bean id="dataSource3" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName" value="jdbc/stfb"/>
		</bean>
		
		<bean id="wonderPublic" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName" value="jdbc/wonderPublic"/>
		</bean>
	-->
		<bean id="wonderPublic"
			class="org.springframework.jdbc.datasource.DriverManagerDataSource">
			<property name="driverClassName"
				value="${hibernate.connection.driver_class}" />
			<property name="url" value="${wonderPublic.hibernate.connection.url}" />
			<property name="username"
				value="${wonderPublic.hibernate.connection.username}" />
			<property name="password"
				value="${wonderPublic.hibernate.connection.password}" />
		</bean>

	<!-- =================================================================== -->
	<!-- SessionFactory(For Hibernate)/ManagerFactory(For JPA) Define        -->
	<!--  ONLY ONE OF THEM SHOULD BE USED                                    -->
	<!-- =================================================================== -->
	<!--  class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean" spring 2.5之后继承的工厂类 -->
	
	<bean id="sessionFactory"
		class="com.wondersgroup.framework.core5.dao.support.EnhancedAnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation"
			value="classpath:hibernate.cfg.xml" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">
					${hibernate.dialect}
				</prop>
			</props>
		</property>
		<property name="annotatedPackagePrefixes">
        	<list>
            	<value>com.wondersgroup.framework</value>
            	<value>com.wonders</value>
        	</list>
    	</property>
		<property name="configurationClass"  value="org.hibernate.cfg.AnnotationConfiguration"></property>
		<property name="lobHandler" ref="${jdbc.handler}" />
	</bean>


	<bean id="sessionFactory2"
		class="com.wondersgroup.framework.core5.dao.support.EnhancedAnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource2" />
		<property name="configLocation"
			value="classpath:hibernate.cfg.xml" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">
					${hibernate.dialect}
				</prop>
			</props>
		</property>
		<property name="annotatedPackagePrefixes">
        	<list>
            	<value>com.wondersgroup.framework</value>
            	<value>com.wonders</value>
        	</list>
    	</property>
    	<property name="mappingDirectoryLocations">
		<list>
			<value>classpath:/com/wonders</value>
		</list>
		</property>       
		<property name="configurationClass"  value="org.hibernate.cfg.AnnotationConfiguration"></property>
		<property name="lobHandler" ref="${jdbc.handler}" />
	</bean>
	
	<bean id="sessionFactory3"
		class="com.wondersgroup.framework.core5.dao.support.EnhancedAnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource3" />
		<property name="configLocation"
			value="classpath:hibernate.cfg.xml" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">
					${hibernate.dialect}
				</prop>
			</props>
		</property>
		<property name="annotatedPackagePrefixes">
        	<list>
            	<value>com.wondersgroup.framework</value>
            	<value>com.wonders</value>
        	</list>
    	</property>
		<property name="configurationClass"  value="org.hibernate.cfg.AnnotationConfiguration"></property>
		<property name="lobHandler" ref="${jdbc.handler}" />
		
		
	</bean>
	
	
		<bean id="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate">
			<property name="sessionFactory" ref="sessionFactory"></property>
		</bean>
		
		<bean id="hibernateTemplate2" class="org.springframework.orm.hibernate3.HibernateTemplate">
			<property name="sessionFactory" ref="sessionFactory2"></property>
		</bean>
	
	
	<bean id = "jdbcTemplate" class = "org.springframework.jdbc.core.JdbcTemplate">
	         <property name = "dataSource" ref="dataSource"/>
	</bean>
	    
		 <bean id="txManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        	<property name="sessionFactory" ref="sessionFactory"/>
		</bean>
		<bean id="txManager2" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        	<property name="sessionFactory" ref="sessionFactory2"/>
		</bean>
		<bean id="txManager3" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        	<property name="sessionFactory" ref="sessionFactory3"/>
		</bean>
	
	<bean id="dsTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource2" />
	</bean>
	
	<tx:annotation-driven transaction-manager="txManager" proxy-target-class="true"/>
	<tx:annotation-driven transaction-manager="txManager2" proxy-target-class="true"/>
	<tx:annotation-driven transaction-manager="txManager3" proxy-target-class="true"/>
	<aop:aspectj-autoproxy/>
<!--	<aop:config expose-proxy="true">
 只对业务逻辑层实施事务 -->
	
	<!--  JPA Entity Manager Factory
		<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="persistenceXmlLocation" value="classpath:persistence.xml" />
		<property name="jpaVendorAdapter">
		<bean
		class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
		<property name="showSql" value="true" />
		<property name="databasePlatform"
		value="${hibernate.dialect}" />
		</bean>
		</property>
		</bean>
	-->
	<!--
	<bean id="weblogicJdbcExtractor"
		class="org.springframework.jdbc.support.nativejdbc.WebLogicNativeJdbcExtractor"
		lazy-init="true" />
	-->
	
	<!-- =================================================================== -->
	<!-- Transaction Define                                                  -->
	<!-- =================================================================== -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<bean id="transactionManager2"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory2" />
	</bean>
	<bean id="transactionManager3"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory3" />
	</bean>
	

	<bean id="basicTxProxy" abstract="true"
		class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager" ref="transactionManager" />
		<property name="transactionAttributes">
		<!--   //ProxyConfig类的exposeProxy属性，表示是否要将当前的代理对象放入AopContext中，  
        //这样在你的Service中可以用AopContext.currentProxy()取得当前代理，相当于this引用， 
        <property name="exposeProxy" value="true" /> -->
			<props>
				<prop key="save*">PROPAGATION_REQUIRED,-Exception</prop>
				<prop key="add*">PROPAGATION_REQUIRED</prop>
				<prop key="remove*">PROPAGATION_REQUIRED</prop>
				<prop key="update*">PROPAGATION_REQUIRED</prop>
				<prop key="*">PROPAGATION_REQUIRED</prop>
			</props>
		</property>
	</bean>
	
	<bean id="basicTxProxy2" abstract="true"
		class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager" ref="transactionManager2" />
		<property name="transactionAttributes">
			<props>
				<prop key="save*">PROPAGATION_REQUIRED,-Exception</prop>
				<prop key="add*">PROPAGATION_REQUIRED</prop>
				<prop key="remove*">PROPAGATION_REQUIRED</prop>
				<prop key="update*">PROPAGATION_REQUIRED</prop>
				<prop key="*">PROPAGATION_REQUIRED</prop>
			</props>
		</property>
	</bean>

	<bean id="basicTxProxy3" abstract="true"
		class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager" ref="transactionManager3" />
		<property name="transactionAttributes">
			<props>
				<prop key="save*">PROPAGATION_REQUIRED</prop>
				<prop key="add*">PROPAGATION_REQUIRED</prop>
				<prop key="remove*">PROPAGATION_REQUIRED</prop>
				<prop key="update*">PROPAGATION_REQUIRED</prop>
				<prop key="*">PROPAGATION_REQUIRED</prop>
			</props>
		</property>
	</bean>
</beans>
